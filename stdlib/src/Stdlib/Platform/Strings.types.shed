import Options from Stdlib.Options;

val codePointToHexString: Fun (CodePoint) -> String;
val codePointToInt: Fun (CodePoint) -> Int;
val codePointToString: Fun (CodePoint) -> String;
val codePointCount: Fun (String) -> Int;
val firstCodePoint: Fun (String) -> Options.Option[CodePoint];
val flatMapCodePoints: Fun (Fun (CodePoint) -> String, String) -> String;
val foldLeftCodePoints: Fun [R](Fun (R, CodePoint) -> R, R, String) -> R;
val repeat: Fun (String, Int) -> String;
val replace: Fun (String, String, String) -> String;
val substring: Fun (Int, Int, String) -> String;
