union Option[+T] tagged = Some[T] | None;
shape Some[+T] tag Option {
    value: T,
}
shape None tag Option {
}

fun some[T](value: T) -> Option[T] {
    return Some(value = value);
}
val none = None();

fun map[T, R](func: (T) -> R, option: Option[T]) -> Option[R] {
    if (option is Some[T]) {
        return some(func(option.value));
    } else {
        return none;
    }
}
